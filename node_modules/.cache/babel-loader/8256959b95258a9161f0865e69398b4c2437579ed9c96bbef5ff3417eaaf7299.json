{"ast":null,"code":"import useProvince from\"./useProvince\";import useCity from\"./useCity\";import useDistrict from\"./useDistrict\";import useVillage from\"./useVillage\";var useTeritory=function useTeritory(_ref){var _dataProvince$data,_dataProvince$data$da,_dataCity$data,_dataCity$data$data,_dataDistrict$data,_dataDistrict$data$da,_dataVillage$data,_dataVillage$data$dat;var provinceCode=_ref.provinceCode,cityCode=_ref.cityCode,districtCode=_ref.districtCode;var _useProvince=useProvince(),dataProvince=_useProvince.data,loadingProvince=_useProvince.isFetching;var _useCity=useCity({provinceCode:provinceCode}),dataCity=_useCity.data,loadingCity=_useCity.isFetching;var _useDistrict=useDistrict({cityCode:cityCode}),dataDistrict=_useDistrict.data,loadingDistrict=_useDistrict.isFetching;var _useVillage=useVillage({districtCode:districtCode}),dataVillage=_useVillage.data,loadingVillage=_useVillage.isFetching;return{data:{province:(dataProvince===null||dataProvince===void 0?void 0:(_dataProvince$data=dataProvince.data)===null||_dataProvince$data===void 0?void 0:(_dataProvince$data$da=_dataProvince$data.data)===null||_dataProvince$data$da===void 0?void 0:_dataProvince$data$da.province)||[],city:(dataCity===null||dataCity===void 0?void 0:(_dataCity$data=dataCity.data)===null||_dataCity$data===void 0?void 0:(_dataCity$data$data=_dataCity$data.data)===null||_dataCity$data$data===void 0?void 0:_dataCity$data$data.city)||[],district:(dataDistrict===null||dataDistrict===void 0?void 0:(_dataDistrict$data=dataDistrict.data)===null||_dataDistrict$data===void 0?void 0:(_dataDistrict$data$da=_dataDistrict$data.data)===null||_dataDistrict$data$da===void 0?void 0:_dataDistrict$data$da.district)||[],village:(dataVillage===null||dataVillage===void 0?void 0:(_dataVillage$data=dataVillage.data)===null||_dataVillage$data===void 0?void 0:(_dataVillage$data$dat=_dataVillage$data.data)===null||_dataVillage$data$dat===void 0?void 0:_dataVillage$data$dat.village)||[]},loading:{province:loadingProvince,city:loadingCity,district:loadingDistrict,village:loadingVillage}};};export default useTeritory;","map":{"version":3,"names":["useProvince","useCity","useDistrict","useVillage","useTeritory","_ref","_dataProvince$data","_dataProvince$data$da","_dataCity$data","_dataCity$data$data","_dataDistrict$data","_dataDistrict$data$da","_dataVillage$data","_dataVillage$data$dat","provinceCode","cityCode","districtCode","_useProvince","dataProvince","data","loadingProvince","isFetching","_useCity","dataCity","loadingCity","_useDistrict","dataDistrict","loadingDistrict","_useVillage","dataVillage","loadingVillage","province","city","district","village","loading"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/src/api/teritory/useTeritory.ts"],"sourcesContent":["import useProvince from \"./useProvince\";\nimport useCity from \"./useCity\";\nimport useDistrict from \"./useDistrict\";\nimport useVillage from \"./useVillage\";\n\ninterface UseTeritoryProps {\n  provinceCode?: string,\n  cityCode?: string,\n  districtCode?: string,\n}\n\nconst useTeritory = ({ provinceCode, cityCode, districtCode }: UseTeritoryProps) => {\n  const { data: dataProvince, isFetching: loadingProvince } = useProvince();\n  const { data: dataCity, isFetching: loadingCity } = useCity({ provinceCode });\n  const { data: dataDistrict, isFetching: loadingDistrict } = useDistrict({ cityCode });\n  const { data: dataVillage, isFetching: loadingVillage } = useVillage({ districtCode });\n\n  return {\n    data: {\n      province: dataProvince?.data?.data?.province || [],\n      city: dataCity?.data?.data?.city || [],\n      district: dataDistrict?.data?.data?.district || [],\n      village: dataVillage?.data?.data?.village || [],\n    },\n    loading: {\n      province: loadingProvince,\n      city: loadingCity,\n      district: loadingDistrict,\n      village: loadingVillage,\n    }\n  }\n}\n\nexport default useTeritory;\n"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAQrC,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAAmE,KAAAC,kBAAA,CAAAC,qBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,kBAAA,CAAAC,qBAAA,CAAAC,iBAAA,CAAAC,qBAAA,IAA7D,CAAAC,YAAY,CAAAT,IAAA,CAAZS,YAAY,CAAEC,QAAQ,CAAAV,IAAA,CAARU,QAAQ,CAAEC,YAAY,CAAAX,IAAA,CAAZW,YAAY,CACzD,IAAAC,YAAA,CAA4DjB,WAAW,CAAC,CAAC,CAA3DkB,YAAY,CAAAD,YAAA,CAAlBE,IAAI,CAA4BC,eAAe,CAAAH,YAAA,CAA3BI,UAAU,CACtC,IAAAC,QAAA,CAAoDrB,OAAO,CAAC,CAAEa,YAAY,CAAZA,YAAa,CAAC,CAAC,CAA/DS,QAAQ,CAAAD,QAAA,CAAdH,IAAI,CAAwBK,WAAW,CAAAF,QAAA,CAAvBD,UAAU,CAClC,IAAAI,YAAA,CAA4DvB,WAAW,CAAC,CAAEa,QAAQ,CAARA,QAAS,CAAC,CAAC,CAAvEW,YAAY,CAAAD,YAAA,CAAlBN,IAAI,CAA4BQ,eAAe,CAAAF,YAAA,CAA3BJ,UAAU,CACtC,IAAAO,WAAA,CAA0DzB,UAAU,CAAC,CAAEa,YAAY,CAAZA,YAAa,CAAC,CAAC,CAAxEa,WAAW,CAAAD,WAAA,CAAjBT,IAAI,CAA2BW,cAAc,CAAAF,WAAA,CAA1BP,UAAU,CAErC,MAAO,CACLF,IAAI,CAAE,CACJY,QAAQ,CAAE,CAAAb,YAAY,SAAZA,YAAY,kBAAAZ,kBAAA,CAAZY,YAAY,CAAEC,IAAI,UAAAb,kBAAA,kBAAAC,qBAAA,CAAlBD,kBAAA,CAAoBa,IAAI,UAAAZ,qBAAA,iBAAxBA,qBAAA,CAA0BwB,QAAQ,GAAI,EAAE,CAClDC,IAAI,CAAE,CAAAT,QAAQ,SAARA,QAAQ,kBAAAf,cAAA,CAARe,QAAQ,CAAEJ,IAAI,UAAAX,cAAA,kBAAAC,mBAAA,CAAdD,cAAA,CAAgBW,IAAI,UAAAV,mBAAA,iBAApBA,mBAAA,CAAsBuB,IAAI,GAAI,EAAE,CACtCC,QAAQ,CAAE,CAAAP,YAAY,SAAZA,YAAY,kBAAAhB,kBAAA,CAAZgB,YAAY,CAAEP,IAAI,UAAAT,kBAAA,kBAAAC,qBAAA,CAAlBD,kBAAA,CAAoBS,IAAI,UAAAR,qBAAA,iBAAxBA,qBAAA,CAA0BsB,QAAQ,GAAI,EAAE,CAClDC,OAAO,CAAE,CAAAL,WAAW,SAAXA,WAAW,kBAAAjB,iBAAA,CAAXiB,WAAW,CAAEV,IAAI,UAAAP,iBAAA,kBAAAC,qBAAA,CAAjBD,iBAAA,CAAmBO,IAAI,UAAAN,qBAAA,iBAAvBA,qBAAA,CAAyBqB,OAAO,GAAI,EAC/C,CAAC,CACDC,OAAO,CAAE,CACPJ,QAAQ,CAAEX,eAAe,CACzBY,IAAI,CAAER,WAAW,CACjBS,QAAQ,CAAEN,eAAe,CACzBO,OAAO,CAAEJ,cACX,CACF,CAAC,CACH,CAAC,CAED,cAAe,CAAA1B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}