{"ast":null,"code":"import{useQuery}from\"react-query\";import useFetcher from\"hooks/useFetcher\";var useCity=function useCity(_ref){var provinceCode=_ref.provinceCode;var fetch=useFetcher(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/teritory/city?province_code=\").concat(provinceCode));return useQuery({queryKey:['get-city',provinceCode],queryFn:fetch});};export default useCity;","map":{"version":3,"names":["useQuery","useFetcher","useCity","_ref","provinceCode","fetch","concat","process","env","REACT_APP_API_ENDPOINT","queryKey","queryFn"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/src/api/teritory/useCity.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\"\nimport { useQuery } from \"react-query\"\nimport { CityResponse } from \"types/teritory\";\nimport useFetcher from \"hooks/useFetcher\";\n\ntype GetCityResponse = AxiosResponse & CityResponse;\n\nconst useCity = ({ provinceCode }: { provinceCode: string }) => {\n  const fetch = useFetcher(`${process.env.REACT_APP_API_ENDPOINT}/teritory/city?province_code=${provinceCode}`);\n\n  return useQuery<unknown, Error, GetCityResponse>({\n    queryKey: ['get-city', provinceCode],\n    queryFn: fetch,\n  })\n}\n\nexport default useCity;\n"],"mappings":"AACA,OAASA,QAAQ,KAAQ,aAAa,CAEtC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CAIzC,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAAC,IAAA,CAAmD,IAA7C,CAAAC,YAAY,CAAAD,IAAA,CAAZC,YAAY,CAC7B,GAAM,CAAAC,KAAK,CAAGJ,UAAU,IAAAK,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kCAAAH,MAAA,CAAgCF,YAAY,CAAE,CAAC,CAE7G,MAAO,CAAAJ,QAAQ,CAAkC,CAC/CU,QAAQ,CAAE,CAAC,UAAU,CAAEN,YAAY,CAAC,CACpCO,OAAO,CAAEN,KACX,CAAC,CAAC,CACJ,CAAC,CAED,cAAe,CAAAH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}