{"ast":null,"code":"import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from\"chart.js\";import{Bar}from\"react-chartjs-2\";import toIDR from\"helpers/toIDR\";// import Typography from \"components/Typography\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);var DUMMY_DATA=[{month:\"Maret\",amount:500000},{month:\"April\",amount:350000},{month:\"Mei\",amount:700000},{month:\"Juni\",amount:600000},{month:\"Juli\",amount:800000}];var options={responsive:true,plugins:{legend:{display:false,position:\"top\"}},scales:{y:{ticks:{callback:function callback(value){return\"\".concat(toIDR(value/1000),\"k\");}}},x:{grid:{display:false}}}};var data={labels:DUMMY_DATA.map(function(i){return i.month;}),datasets:[{label:\"Pendapatan\",data:DUMMY_DATA.map(function(i){return i.amount;}),backgroundColor:\"rgb(14 165 233 / 1)\"}]};var ChartIncome=function ChartIncome(){// const totalIncome = DUMMY_DATA.map((i) => i.amount).reduce((a, b) => a + b);\nreturn/*#__PURE__*/ (// <div className=\"grid grid-cols-4\">\n//   <div className=\"col-span-4 flex flex-col items-center divide-y md:col-span-1\">\n//     <Typography bold>Total Pendapatan</Typography>\n//     <Typography bold className=\"text-3xl\">{`${toIDR(\n//       totalIncome / 1000\n//     )}k`}</Typography>\n//   </div>\n//   <div className=\"col-span-4 md:col-span-3\">\n_jsx(Bar,{options:options,data:data})//   </div>\n// </div>\n);};export default ChartIncome;","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","toIDR","jsx","_jsx","register","DUMMY_DATA","month","amount","options","responsive","plugins","legend","display","position","scales","y","ticks","callback","value","concat","x","grid","data","labels","map","i","datasets","label","backgroundColor","ChartIncome"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/src/pages/Home/components/ChartIncome.tsx"],"sourcesContent":["import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport toIDR from \"helpers/toIDR\";\n// import Typography from \"components/Typography\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst DUMMY_DATA = [\n  { month: \"Maret\", amount: 500000 },\n  { month: \"April\", amount: 350000 },\n  { month: \"Mei\", amount: 700000 },\n  { month: \"Juni\", amount: 600000 },\n  { month: \"Juli\", amount: 800000 },\n];\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      display: false,\n      position: \"top\" as const,\n    },\n  },\n  scales: {\n    y: {\n      ticks: {\n        callback: (value) => {\n          return `${toIDR(value / 1000)}k`;\n        },\n      },\n    },\n    x: {\n      grid: {\n        display: false,\n      },\n    },\n  },\n};\n\nconst data = {\n  labels: DUMMY_DATA.map((i) => i.month),\n  datasets: [\n    {\n      label: \"Pendapatan\",\n      data: DUMMY_DATA.map((i) => i.amount),\n      backgroundColor: \"rgb(14 165 233 / 1)\",\n    },\n  ],\n};\n\nconst ChartIncome = () => {\n  // const totalIncome = DUMMY_DATA.map((i) => i.amount).reduce((a, b) => a + b);\n\n  return (\n    // <div className=\"grid grid-cols-4\">\n    //   <div className=\"col-span-4 flex flex-col items-center divide-y md:col-span-1\">\n    //     <Typography bold>Total Pendapatan</Typography>\n    //     <Typography bold className=\"text-3xl\">{`${toIDR(\n    //       totalIncome / 1000\n    //     )}k`}</Typography>\n    //   </div>\n    //   <div className=\"col-span-4 md:col-span-3\">\n    <Bar options={options} data={data} />\n    //   </div>\n    // </div>\n  );\n};\n\nexport default ChartIncome;\n"],"mappings":"AAAA,OACEA,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CACjB,OAASC,GAAG,KAAQ,iBAAiB,CACrC,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEAV,OAAO,CAACW,QAAQ,CACdV,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED,GAAM,CAAAM,UAAU,CAAG,CACjB,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAC,CAClC,CAAED,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAC,CAClC,CAAED,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,MAAO,CAAC,CAChC,CAAED,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAC,CACjC,CAAED,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAC,CAClC,CAED,GAAM,CAAAC,OAAO,CAAG,CACdC,UAAU,CAAE,IAAI,CAChBC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,OAAO,CAAE,KAAK,CACdC,QAAQ,CAAE,KACZ,CACF,CAAC,CACDC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,KAAK,CAAE,CACLC,QAAQ,CAAE,SAAAA,SAACC,KAAK,CAAK,CACnB,SAAAC,MAAA,CAAUlB,KAAK,CAACiB,KAAK,CAAG,IAAI,CAAC,MAC/B,CACF,CACF,CAAC,CACDE,CAAC,CAAE,CACDC,IAAI,CAAE,CACJT,OAAO,CAAE,KACX,CACF,CACF,CACF,CAAC,CAED,GAAM,CAAAU,IAAI,CAAG,CACXC,MAAM,CAAElB,UAAU,CAACmB,GAAG,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACnB,KAAK,GAAC,CACtCoB,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,YAAY,CACnBL,IAAI,CAAEjB,UAAU,CAACmB,GAAG,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAAClB,MAAM,GAAC,CACrCqB,eAAe,CAAE,qBACnB,CAAC,CAEL,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB;AAEA,oBACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1B,IAAA,CAACH,GAAG,EAACQ,OAAO,CAAEA,OAAQ,CAACc,IAAI,CAAEA,IAAK,CAAE,CACpC;AACA;AAAA,EAEJ,CAAC,CAED,cAAe,CAAAO,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}