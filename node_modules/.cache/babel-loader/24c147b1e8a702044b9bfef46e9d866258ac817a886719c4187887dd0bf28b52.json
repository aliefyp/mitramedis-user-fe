{"ast":null,"code":"import _objectSpread from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"className\", \"theme\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useNavbarContext } from './NavbarContext';\nexport var NavbarCollapse = function NavbarCollapse(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useNavbarContext = useNavbarContext(),\n    isOpen = _useNavbarContext.isOpen;\n  var theme = mergeDeep(useTheme().theme.navbar.collapse, customTheme);\n  return _jsx(\"div\", _objectSpread(_objectSpread({\n    \"data-testid\": \"flowbite-navbar-collapse\",\n    className: twMerge(theme.base, theme.hidden[!isOpen ? 'on' : 'off'], className)\n  }, props), {}, {\n    children: _jsx(\"ul\", {\n      className: theme.list,\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["jsx","_jsx","twMerge","useTheme","mergeDeep","useNavbarContext","NavbarCollapse","_ref","children","className","_ref$theme","theme","customTheme","props","_objectWithoutProperties","_excluded","_useNavbarContext","isOpen","navbar","collapse","_objectSpread","base","hidden","list"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/flowbite-react/lib/esm/components/Navbar/NavbarCollapse.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useNavbarContext } from './NavbarContext';\nexport const NavbarCollapse = ({ children, className, theme: customTheme = {}, ...props }) => {\n    const { isOpen } = useNavbarContext();\n    const theme = mergeDeep(useTheme().theme.navbar.collapse, customTheme);\n    return (_jsx(\"div\", { \"data-testid\": \"flowbite-navbar-collapse\", className: twMerge(theme.base, theme.hidden[!isOpen ? 'on' : 'off'], className), ...props, children: _jsx(\"ul\", { className: theme.list, children: children }) }));\n};\n"],"mappings":";;;AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAmE;EAAA,IAA7DC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAAC,UAAA,GAAAH,IAAA,CAAEI,KAAK;IAAEC,WAAW,GAAAF,UAAA,cAAG,CAAC,CAAC,GAAAA,UAAA;IAAKG,KAAK,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EACnF,IAAAC,iBAAA,GAAmBX,gBAAgB,CAAC,CAAC;IAA7BY,MAAM,GAAAD,iBAAA,CAANC,MAAM;EACd,IAAMN,KAAK,GAAGP,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACQ,KAAK,CAACO,MAAM,CAACC,QAAQ,EAAEP,WAAW,CAAC;EACtE,OAAQX,IAAI,CAAC,KAAK,EAAAmB,aAAA,CAAAA,aAAA;IAAI,aAAa,EAAE,0BAA0B;IAAEX,SAAS,EAAEP,OAAO,CAACS,KAAK,CAACU,IAAI,EAAEV,KAAK,CAACW,MAAM,CAAC,CAACL,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,EAAER,SAAS;EAAC,GAAKI,KAAK;IAAEL,QAAQ,EAAEP,IAAI,CAAC,IAAI,EAAE;MAAEQ,SAAS,EAAEE,KAAK,CAACY,IAAI;MAAEf,QAAQ,EAAEA;IAAS,CAAC;EAAC,EAAE,CAAC;AACtO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}