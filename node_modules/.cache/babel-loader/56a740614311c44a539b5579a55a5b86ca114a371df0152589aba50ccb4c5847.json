{"ast":null,"code":"import _slicedToArray from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { isClient } from '../../helpers/is-client';\nimport { theme } from '../../theme';\nexport var ThemeContext = createContext({\n  theme: theme\n});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n    value = _ref.value;\n  return _jsx(ThemeContext.Provider, {\n    value: value,\n    children: children\n  });\n};\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\nvar prefersColorScheme = function prefersColorScheme() {\n  var _window$matchMedia, _window;\n  if (!isClient()) {\n    return 'light';\n  }\n  return (_window$matchMedia = (_window = window).matchMedia) !== null && _window$matchMedia !== void 0 && _window$matchMedia.call(_window, '(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\nexport var useThemeMode = function useThemeMode() {\n  var onToggleMode = function onToggleMode() {\n    var newMode = mode === 'dark' ? 'light' : 'dark';\n    setModeOnBody(newMode);\n    setMode(newMode);\n  };\n  var setModeOnBody = useCallback(function (mode) {\n    if (!isClient()) {\n      return;\n    }\n    if (mode === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n  var _useContext = useContext(ThemeContext),\n    initialMode = _useContext.mode,\n    _useContext$toggleMod = _useContext.toggleMode,\n    toggleMode = _useContext$toggleMod === void 0 ? onToggleMode : _useContext$toggleMod;\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setMode = _useState2[1];\n  useEffect(function () {\n    if (initialMode) {\n      setModeOnBody(initialMode);\n      setMode(initialMode);\n    } else {\n      setMode(prefersColorScheme());\n    }\n  }, [initialMode, setModeOnBody, setMode]);\n  return [mode, setMode, toggleMode];\n};","map":{"version":3,"names":["jsx","_jsx","createContext","useCallback","useContext","useEffect","useState","isClient","theme","ThemeContext","ThemeProvider","_ref","children","value","Provider","useTheme","prefersColorScheme","_window$matchMedia","_window","window","matchMedia","call","matches","useThemeMode","onToggleMode","newMode","mode","setModeOnBody","setMode","document","documentElement","classList","add","remove","_useContext","initialMode","_useContext$toggleMod","toggleMode","_useState","_useState2","_slicedToArray"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/flowbite-react/lib/esm/components/Flowbite/ThemeContext.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { isClient } from '../../helpers/is-client';\nimport { theme } from '../../theme';\nexport const ThemeContext = createContext({\n    theme,\n});\nexport const ThemeProvider = ({ children, value }) => {\n    return _jsx(ThemeContext.Provider, { value: value, children: children });\n};\nexport const useTheme = () => {\n    return useContext(ThemeContext);\n};\nconst prefersColorScheme = () => {\n    if (!isClient()) {\n        return 'light';\n    }\n    return window.matchMedia?.('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\nexport const useThemeMode = () => {\n    const onToggleMode = () => {\n        const newMode = mode === 'dark' ? 'light' : 'dark';\n        setModeOnBody(newMode);\n        setMode(newMode);\n    };\n    const setModeOnBody = useCallback((mode) => {\n        if (!isClient()) {\n            return;\n        }\n        if (mode === 'dark') {\n            document.documentElement.classList.add('dark');\n        }\n        else {\n            document.documentElement.classList.remove('dark');\n        }\n    }, []);\n    const { mode: initialMode, toggleMode = onToggleMode } = useContext(ThemeContext);\n    const [mode, setMode] = useState('light');\n    useEffect(() => {\n        if (initialMode) {\n            setModeOnBody(initialMode);\n            setMode(initialMode);\n        }\n        else {\n            setMode(prefersColorScheme());\n        }\n    }, [initialMode, setModeOnBody, setMode]);\n    return [mode, setMode, toggleMode];\n};\n"],"mappings":";AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnF,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAO,IAAMC,YAAY,GAAGP,aAAa,CAAC;EACtCM,KAAK,EAALA;AACJ,CAAC,CAAC;AACF,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC3C,OAAOZ,IAAI,CAACQ,YAAY,CAACK,QAAQ,EAAE;IAAED,KAAK,EAAEA,KAAK;IAAED,QAAQ,EAAEA;EAAS,CAAC,CAAC;AAC5E,CAAC;AACD,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAC1B,OAAOX,UAAU,CAACK,YAAY,CAAC;AACnC,CAAC;AACD,IAAMO,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAAA,IAAAC,kBAAA,EAAAC,OAAA;EAC7B,IAAI,CAACX,QAAQ,CAAC,CAAC,EAAE;IACb,OAAO,OAAO;EAClB;EACA,OAAO,CAAAU,kBAAA,IAAAC,OAAA,GAAAC,MAAM,EAACC,UAAU,cAAAH,kBAAA,eAAjBA,kBAAA,CAAAI,IAAA,CAAAH,OAAA,EAAoB,8BAA8B,CAAC,CAACI,OAAO,GAAG,MAAM,GAAG,OAAO;AACzF,CAAC;AACD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAC9B,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACvB,IAAMC,OAAO,GAAGC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;IAClDC,aAAa,CAACF,OAAO,CAAC;IACtBG,OAAO,CAACH,OAAO,CAAC;EACpB,CAAC;EACD,IAAME,aAAa,GAAGxB,WAAW,CAAC,UAACuB,IAAI,EAAK;IACxC,IAAI,CAACnB,QAAQ,CAAC,CAAC,EAAE;MACb;IACJ;IACA,IAAImB,IAAI,KAAK,MAAM,EAAE;MACjBG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAClD,CAAC,MACI;MACDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACrD;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAAC,WAAA,GAAyD9B,UAAU,CAACK,YAAY,CAAC;IAAnE0B,WAAW,GAAAD,WAAA,CAAjBR,IAAI;IAAAU,qBAAA,GAAAF,WAAA,CAAeG,UAAU;IAAVA,UAAU,GAAAD,qBAAA,cAAGZ,YAAY,GAAAY,qBAAA;EACpD,IAAAE,SAAA,GAAwBhC,QAAQ,CAAC,OAAO,CAAC;IAAAiC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlCZ,IAAI,GAAAa,UAAA;IAAEX,OAAO,GAAAW,UAAA;EACpBlC,SAAS,CAAC,YAAM;IACZ,IAAI8B,WAAW,EAAE;MACbR,aAAa,CAACQ,WAAW,CAAC;MAC1BP,OAAO,CAACO,WAAW,CAAC;IACxB,CAAC,MACI;MACDP,OAAO,CAACZ,kBAAkB,CAAC,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,CAACmB,WAAW,EAAER,aAAa,EAAEC,OAAO,CAAC,CAAC;EACzC,OAAO,CAACF,IAAI,EAAEE,OAAO,EAAES,UAAU,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}