{"ast":null,"code":"import _objectSpread from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"theme\", \"iconDark\", \"iconLight\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { ThemeContext } from '../../components/Flowbite/ThemeContext';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var DarkThemeToggle = function DarkThemeToggle(_ref) {\n  var className = _ref.className,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    _ref$iconDark = _ref.iconDark,\n    IconDark = _ref$iconDark === void 0 ? HiSun : _ref$iconDark,\n    _ref$iconLight = _ref.iconLight,\n    IconLight = _ref$iconLight === void 0 ? HiMoon : _ref$iconLight,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n  var _useContext = useContext(ThemeContext),\n    mode = _useContext.mode,\n    toggleMode = _useContext.toggleMode;\n  return _jsx(\"button\", _objectSpread(_objectSpread({\n    \"aria-label\": \"Toggle dark mode\",\n    \"data-testid\": \"dark-theme-toggle\",\n    onClick: toggleMode,\n    type: \"button\",\n    className: twMerge(theme.root.base, className)\n  }, props), {}, {\n    children: mode === 'dark' ? _jsx(IconLight, {\n      \"aria-label\": \"Currently dark mode\",\n      className: theme.root.icon\n    }) : _jsx(IconDark, {\n      \"aria-label\": \"Currently light mode\",\n      className: theme.root.icon\n    })\n  }));\n};\nDarkThemeToggle.displayName = 'DarkThemeToggle';","map":{"version":3,"names":["jsx","_jsx","useContext","HiMoon","HiSun","twMerge","useTheme","ThemeContext","mergeDeep","DarkThemeToggle","_ref","className","_ref$theme","theme","customTheme","_ref$iconDark","iconDark","IconDark","_ref$iconLight","iconLight","IconLight","props","_objectWithoutProperties","_excluded","darkThemeToggle","_useContext","mode","toggleMode","_objectSpread","onClick","type","root","base","children","icon","displayName"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/flowbite-react/lib/esm/components/DarkThemeToggle/DarkThemeToggle.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { ThemeContext } from '../../components/Flowbite/ThemeContext';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport const DarkThemeToggle = ({ className, theme: customTheme = {}, iconDark: IconDark = HiSun, iconLight: IconLight = HiMoon, ...props }) => {\n    const theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n    const { mode, toggleMode } = useContext(ThemeContext);\n    return (_jsx(\"button\", { \"aria-label\": \"Toggle dark mode\", \"data-testid\": \"dark-theme-toggle\", onClick: toggleMode, type: \"button\", className: twMerge(theme.root.base, className), ...props, children: mode === 'dark' ? (_jsx(IconLight, { \"aria-label\": \"Currently dark mode\", className: theme.root.icon })) : (_jsx(IconDark, { \"aria-label\": \"Currently light mode\", className: theme.root.icon })) }));\n};\nDarkThemeToggle.displayName = 'DarkThemeToggle';\n"],"mappings":";;;AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAC9C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,YAAY,QAAQ,wCAAwC;AACrE,SAASC,SAAS,QAAQ,0BAA0B;AACpD,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAoH;EAAA,IAA9GC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAAC,UAAA,GAAAF,IAAA,CAAEG,KAAK;IAAEC,WAAW,GAAAF,UAAA,cAAG,CAAC,CAAC,GAAAA,UAAA;IAAAG,aAAA,GAAAL,IAAA,CAAEM,QAAQ;IAAEC,QAAQ,GAAAF,aAAA,cAAGX,KAAK,GAAAW,aAAA;IAAAG,cAAA,GAAAR,IAAA,CAAES,SAAS;IAAEC,SAAS,GAAAF,cAAA,cAAGf,MAAM,GAAAe,cAAA;IAAKG,KAAK,GAAAC,wBAAA,CAAAZ,IAAA,EAAAa,SAAA;EACrI,IAAMV,KAAK,GAAGL,SAAS,CAACF,QAAQ,CAAC,CAAC,CAACO,KAAK,CAACW,eAAe,EAAEV,WAAW,CAAC;EACtE,IAAAW,WAAA,GAA6BvB,UAAU,CAACK,YAAY,CAAC;IAA7CmB,IAAI,GAAAD,WAAA,CAAJC,IAAI;IAAEC,UAAU,GAAAF,WAAA,CAAVE,UAAU;EACxB,OAAQ1B,IAAI,CAAC,QAAQ,EAAA2B,aAAA,CAAAA,aAAA;IAAI,YAAY,EAAE,kBAAkB;IAAE,aAAa,EAAE,mBAAmB;IAAEC,OAAO,EAAEF,UAAU;IAAEG,IAAI,EAAE,QAAQ;IAAEnB,SAAS,EAAEN,OAAO,CAACQ,KAAK,CAACkB,IAAI,CAACC,IAAI,EAAErB,SAAS;EAAC,GAAKU,KAAK;IAAEY,QAAQ,EAAEP,IAAI,KAAK,MAAM,GAAIzB,IAAI,CAACmB,SAAS,EAAE;MAAE,YAAY,EAAE,qBAAqB;MAAET,SAAS,EAAEE,KAAK,CAACkB,IAAI,CAACG;IAAK,CAAC,CAAC,GAAKjC,IAAI,CAACgB,QAAQ,EAAE;MAAE,YAAY,EAAE,sBAAsB;MAAEN,SAAS,EAAEE,KAAK,CAACkB,IAAI,CAACG;IAAK,CAAC;EAAE,EAAE,CAAC;AAChZ,CAAC;AACDzB,eAAe,CAAC0B,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}