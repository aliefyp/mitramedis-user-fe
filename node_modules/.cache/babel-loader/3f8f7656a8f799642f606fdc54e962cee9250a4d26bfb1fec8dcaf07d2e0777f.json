{"ast":null,"code":"import _regeneratorRuntime from\"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useSignOut}from\"react-auth-kit\";import{useQuery}from\"react-query\";import useAuthHeaders from\"hooks/useAuthHeaders\";import{useState}from\"react\";export var useKfa=function useKfa(_ref){var keyword=_ref.keyword;var signOut=useSignOut();var headers=useAuthHeaders();var _useState=useState(1),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState(10),_useState4=_slicedToArray(_useState3,2),perPage=_useState4[0],setPerPage=_useState4[1];return _objectSpread({page:page,perPage:perPage,setPage:setPage,setPerPage:setPerPage},useQuery({queryKey:['get-all-kfa',keyword],queryFn:function(){var _queryFn=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var query,_err$response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:query=new URLSearchParams({keyword:keyword});_context.prev=1;_context.next=4;return axios.get(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/kfa/search?\").concat(query),{headers:headers});case 4:return _context.abrupt(\"return\",_context.sent);case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.error(_context.t0);if((_context.t0===null||_context.t0===void 0?void 0:(_err$response=_context.t0.response)===null||_err$response===void 0?void 0:_err$response.status)===401)signOut();case 11:case\"end\":return _context.stop();}},_callee,null,[[1,7]]);}));function queryFn(){return _queryFn.apply(this,arguments);}return queryFn;}(),enabled:Boolean(keyword===null||keyword===void 0?void 0:keyword.length)}));};","map":{"version":3,"names":["axios","useSignOut","useQuery","useAuthHeaders","useState","useKfa","_ref","keyword","signOut","headers","_useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","perPage","setPerPage","_objectSpread","queryKey","queryFn","_queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","_err$response","wrap","_callee$","_context","prev","next","URLSearchParams","get","concat","process","env","REACT_APP_API_ENDPOINT","abrupt","sent","t0","console","error","response","status","stop","apply","arguments","enabled","Boolean","length"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/src/api/kfa.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\"\nimport { useSignOut } from \"react-auth-kit\";\nimport { useQuery } from \"react-query\"\nimport useAuthHeaders from \"hooks/useAuthHeaders\";\nimport { useState } from \"react\";\nimport { KfaType } from \"types/kfa\";\n\ninterface GetAllKfaResponse extends AxiosResponse {\n  data: {\n    result: KfaType[];\n  }\n}\n\nexport const useKfa = ({ keyword }) => {\n  const signOut = useSignOut();\n  const headers = useAuthHeaders();\n\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n\n  return {\n    page,\n    perPage,\n    setPage,\n    setPerPage,\n    ...useQuery<unknown, unknown, GetAllKfaResponse>({\n      queryKey: ['get-all-kfa', keyword],\n      queryFn: async () => {\n        const query = new URLSearchParams({\n          keyword,\n        });\n\n        try {\n          return await axios.get(`${process.env.REACT_APP_API_ENDPOINT}/kfa/search?${query}`, { headers })\n        } catch (err) {\n          console.error(err);\n          if (err?.response?.status === 401) signOut();\n        }\n      },\n      enabled: Boolean(keyword?.length)\n    }),\n  }\n}"],"mappings":"2kBAAA,MAAO,CAAAA,KAAK,KAAyB,OAAO,CAC5C,OAASC,UAAU,KAAQ,gBAAgB,CAC3C,OAASC,QAAQ,KAAQ,aAAa,CACtC,MAAO,CAAAC,cAAc,KAAM,sBAAsB,CACjD,OAASC,QAAQ,KAAQ,OAAO,CAShC,MAAO,IAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,IAAA,CAAoB,IAAd,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAC9B,GAAM,CAAAC,OAAO,CAAGP,UAAU,CAAC,CAAC,CAC5B,GAAM,CAAAQ,OAAO,CAAGN,cAAc,CAAC,CAAC,CAEhC,IAAAO,SAAA,CAAwBN,QAAQ,CAAC,CAAC,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA8BX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAE1B,OAAAG,aAAA,EACEN,IAAI,CAAJA,IAAI,CACJI,OAAO,CAAPA,OAAO,CACPH,OAAO,CAAPA,OAAO,CACPI,UAAU,CAAVA,UAAU,EACPhB,QAAQ,CAAsC,CAC/CkB,QAAQ,CAAE,CAAC,aAAa,CAAEb,OAAO,CAAC,CAClCc,OAAO,gBAAAC,QAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAC,QAAA,MAAAC,KAAA,CAAAC,aAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACDN,KAAK,CAAG,GAAI,CAAAO,eAAe,CAAC,CAChC3B,OAAO,CAAPA,OACF,CAAC,CAAC,CAAAwB,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAGa,CAAAjC,KAAK,CAACmC,GAAG,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,iBAAAH,MAAA,CAAeT,KAAK,EAAI,CAAElB,OAAO,CAAPA,OAAQ,CAAC,CAAC,eAAAsB,QAAA,CAAAS,MAAA,UAAAT,QAAA,CAAAU,IAAA,SAAAV,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAW,EAAA,CAAAX,QAAA,aAEhGY,OAAO,CAACC,KAAK,CAAAb,QAAA,CAAAW,EAAI,CAAC,CAClB,GAAI,CAAAX,QAAA,CAAAW,EAAA,SAAAX,QAAA,CAAAW,EAAA,kBAAAd,aAAA,CAAAG,QAAA,CAAAW,EAAA,CAAKG,QAAQ,UAAAjB,aAAA,iBAAbA,aAAA,CAAekB,MAAM,IAAK,GAAG,CAAEtC,OAAO,CAAC,CAAC,CAAC,yBAAAuB,QAAA,CAAAgB,IAAA,MAAArB,OAAA,gBAEhD,YAAAL,QAAA,SAAAC,QAAA,CAAA0B,KAAA,MAAAC,SAAA,UAAA5B,OAAA,KACD6B,OAAO,CAAEC,OAAO,CAAC5C,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAE6C,MAAM,CAClC,CAAC,CAAC,EAEN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}