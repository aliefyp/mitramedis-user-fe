{"ast":null,"code":"import _objectSpread from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"as\", \"children\", \"className\", \"theme\"];\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useAccordionContext } from './AccordionPanelContext';\nexport var AccordionTitle = function AccordionTitle(_ref) {\n  var _ref$as = _ref.as,\n    Heading = _ref$as === void 0 ? 'h2' : _ref$as,\n    children = _ref.children,\n    className = _ref.className,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useAccordionContext = useAccordionContext(),\n    ArrowIcon = _useAccordionContext.arrowIcon,\n    flush = _useAccordionContext.flush,\n    isOpen = _useAccordionContext.isOpen,\n    setOpen = _useAccordionContext.setOpen;\n  var onClick = function onClick() {\n    return typeof setOpen !== 'undefined' && setOpen();\n  };\n  var theme = mergeDeep(useTheme().theme.accordion.title, customTheme);\n  return _jsxs(\"button\", _objectSpread(_objectSpread({\n    className: twMerge(theme.base, theme.flush[flush ? 'on' : 'off'], theme.open[isOpen ? 'on' : 'off'], className),\n    onClick: onClick,\n    type: \"button\"\n  }, props), {}, {\n    children: [_jsx(Heading, {\n      className: theme.heading,\n      \"data-testid\": \"flowbite-accordion-heading\",\n      children: children\n    }), ArrowIcon && _jsx(ArrowIcon, {\n      \"aria-hidden\": true,\n      className: twMerge(theme.arrow.base, theme.arrow.open[isOpen ? 'on' : 'off']),\n      \"data-testid\": \"flowbite-accordion-arrow\"\n    })]\n  }));\n};","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","twMerge","useTheme","mergeDeep","useAccordionContext","AccordionTitle","_ref","_ref$as","as","Heading","children","className","_ref$theme","theme","customTheme","props","_objectWithoutProperties","_excluded","_useAccordionContext","ArrowIcon","arrowIcon","flush","isOpen","setOpen","onClick","accordion","title","_objectSpread","base","open","type","heading","arrow"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/flowbite-react/lib/esm/components/Accordion/AccordionTitle.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useAccordionContext } from './AccordionPanelContext';\nexport const AccordionTitle = ({ as: Heading = 'h2', children, className, theme: customTheme = {}, ...props }) => {\n    const { arrowIcon: ArrowIcon, flush, isOpen, setOpen } = useAccordionContext();\n    const onClick = () => typeof setOpen !== 'undefined' && setOpen();\n    const theme = mergeDeep(useTheme().theme.accordion.title, customTheme);\n    return (_jsxs(\"button\", { className: twMerge(theme.base, theme.flush[flush ? 'on' : 'off'], theme.open[isOpen ? 'on' : 'off'], className), onClick: onClick, type: \"button\", ...props, children: [_jsx(Heading, { className: theme.heading, \"data-testid\": \"flowbite-accordion-heading\", children: children }), ArrowIcon && (_jsx(ArrowIcon, { \"aria-hidden\": true, className: twMerge(theme.arrow.base, theme.arrow.open[isOpen ? 'on' : 'off']), \"data-testid\": \"flowbite-accordion-arrow\" }))] }));\n};\n"],"mappings":";;;AAAA,SAASA,GAAG,IAAIC,IAAI,EAAEC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AAC9D,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuF;EAAA,IAAAC,OAAA,GAAAD,IAAA,CAAjFE,EAAE;IAAEC,OAAO,GAAAF,OAAA,cAAG,IAAI,GAAAA,OAAA;IAAEG,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,SAAS,GAAAL,IAAA,CAATK,SAAS;IAAAC,UAAA,GAAAN,IAAA,CAAEO,KAAK;IAAEC,WAAW,GAAAF,UAAA,cAAG,CAAC,CAAC,GAAAA,UAAA;IAAKG,KAAK,GAAAC,wBAAA,CAAAV,IAAA,EAAAW,SAAA;EACvG,IAAAC,oBAAA,GAAyDd,mBAAmB,CAAC,CAAC;IAA3De,SAAS,GAAAD,oBAAA,CAApBE,SAAS;IAAaC,KAAK,GAAAH,oBAAA,CAALG,KAAK;IAAEC,MAAM,GAAAJ,oBAAA,CAANI,MAAM;IAAEC,OAAO,GAAAL,oBAAA,CAAPK,OAAO;EACpD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA;IAAA,OAAS,OAAOD,OAAO,KAAK,WAAW,IAAIA,OAAO,CAAC,CAAC;EAAA;EACjE,IAAMV,KAAK,GAAGV,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACW,KAAK,CAACY,SAAS,CAACC,KAAK,EAAEZ,WAAW,CAAC;EACtE,OAAQd,KAAK,CAAC,QAAQ,EAAA2B,aAAA,CAAAA,aAAA;IAAIhB,SAAS,EAAEV,OAAO,CAACY,KAAK,CAACe,IAAI,EAAEf,KAAK,CAACQ,KAAK,CAACA,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,EAAER,KAAK,CAACgB,IAAI,CAACP,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,EAAEX,SAAS,CAAC;IAAEa,OAAO,EAAEA,OAAO;IAAEM,IAAI,EAAE;EAAQ,GAAKf,KAAK;IAAEL,QAAQ,EAAE,CAACZ,IAAI,CAACW,OAAO,EAAE;MAAEE,SAAS,EAAEE,KAAK,CAACkB,OAAO;MAAE,aAAa,EAAE,4BAA4B;MAAErB,QAAQ,EAAEA;IAAS,CAAC,CAAC,EAAES,SAAS,IAAKrB,IAAI,CAACqB,SAAS,EAAE;MAAE,aAAa,EAAE,IAAI;MAAER,SAAS,EAAEV,OAAO,CAACY,KAAK,CAACmB,KAAK,CAACJ,IAAI,EAAEf,KAAK,CAACmB,KAAK,CAACH,IAAI,CAACP,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;MAAE,aAAa,EAAE;IAA2B,CAAC,CAAE;EAAC,EAAE,CAAC;AACze,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}