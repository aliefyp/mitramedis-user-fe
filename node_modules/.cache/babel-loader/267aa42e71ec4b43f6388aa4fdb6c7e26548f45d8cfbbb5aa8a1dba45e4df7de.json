{"ast":null,"code":"import _objectSpread from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"className\", \"theme\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useAccordionContext } from './AccordionPanelContext';\nexport var AccordionContent = function AccordionContent(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useAccordionContext = useAccordionContext(),\n    isOpen = _useAccordionContext.isOpen;\n  var theme = mergeDeep(useTheme().theme.accordion.content, customTheme);\n  return _jsx(\"div\", _objectSpread(_objectSpread({\n    className: twMerge(theme.base, className),\n    \"data-testid\": \"flowbite-accordion-content\",\n    hidden: !isOpen\n  }, props), {}, {\n    children: children\n  }));\n};","map":{"version":3,"names":["jsx","_jsx","twMerge","useTheme","mergeDeep","useAccordionContext","AccordionContent","_ref","children","className","_ref$theme","theme","customTheme","props","_objectWithoutProperties","_excluded","_useAccordionContext","isOpen","accordion","content","_objectSpread","base","hidden"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/flowbite-react/lib/esm/components/Accordion/AccordionContent.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useAccordionContext } from './AccordionPanelContext';\nexport const AccordionContent = ({ children, className, theme: customTheme = {}, ...props }) => {\n    const { isOpen } = useAccordionContext();\n    const theme = mergeDeep(useTheme().theme.accordion.content, customTheme);\n    return (_jsx(\"div\", { className: twMerge(theme.base, className), \"data-testid\": \"flowbite-accordion-content\", hidden: !isOpen, ...props, children: children }));\n};\n"],"mappings":";;;AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAmE;EAAA,IAA7DC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAAC,UAAA,GAAAH,IAAA,CAAEI,KAAK;IAAEC,WAAW,GAAAF,UAAA,cAAG,CAAC,CAAC,GAAAA,UAAA;IAAKG,KAAK,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EACrF,IAAAC,oBAAA,GAAmBX,mBAAmB,CAAC,CAAC;IAAhCY,MAAM,GAAAD,oBAAA,CAANC,MAAM;EACd,IAAMN,KAAK,GAAGP,SAAS,CAACD,QAAQ,CAAC,CAAC,CAACQ,KAAK,CAACO,SAAS,CAACC,OAAO,EAAEP,WAAW,CAAC;EACxE,OAAQX,IAAI,CAAC,KAAK,EAAAmB,aAAA,CAAAA,aAAA;IAAIX,SAAS,EAAEP,OAAO,CAACS,KAAK,CAACU,IAAI,EAAEZ,SAAS,CAAC;IAAE,aAAa,EAAE,4BAA4B;IAAEa,MAAM,EAAE,CAACL;EAAM,GAAKJ,KAAK;IAAEL,QAAQ,EAAEA;EAAQ,EAAE,CAAC;AAClK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}