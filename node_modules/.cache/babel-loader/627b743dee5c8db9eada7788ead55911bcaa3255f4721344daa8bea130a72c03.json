{"ast":null,"code":"import _objectWithoutProperties from\"/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"stock_id\"];import PageHeading from\"components/PageHeading\";import StockCardTable from\"./components/StockCardTable\";import StockCardFilter from\"./components/StockCardFilter\";import{useLocation,useNavigate}from\"react-router-dom\";import{useStockCard}from\"api/stock\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StockCard=function StockCard(){var _data$data,_data$data$data;var location=useLocation();var navigate=useNavigate();var _Object$fromEntries=Object.fromEntries(new URLSearchParams(location.search)),stock_id=_Object$fromEntries.stock_id,filter=_objectWithoutProperties(_Object$fromEntries,_excluded);var _useStockCard=useStockCard({stock_id:stock_id,filter:filter}),data=_useStockCard.data,isLoading=_useStockCard.isLoading;var handleSubmitFilter=function handleSubmitFilter(filter){var stock_id=filter.stock_id,period_month=filter.period_month;var splittedMonth=period_month.split(\"-\");var queryObj={stock_id:stock_id,month:splittedMonth[1],year:splittedMonth[0]};var query=new URLSearchParams(queryObj).toString();navigate(\"\".concat(location.pathname,\"?\").concat(query));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PageHeading,{title:\"Kartu Stok\",breadcrumbs:[{text:\"Stok\",url:\"/stok\"},{text:\"Kartu Stok\"}]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(StockCardFilter,{onSubmit:handleSubmitFilter}),/*#__PURE__*/_jsx(StockCardTable,{data:data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:(_data$data$data=_data$data.data)===null||_data$data$data===void 0?void 0:_data$data$data.stock_card,loading:isLoading})]})]});};export default StockCard;","map":{"version":3,"names":["PageHeading","StockCardTable","StockCardFilter","useLocation","useNavigate","useStockCard","jsx","_jsx","jsxs","_jsxs","StockCard","_data$data","_data$data$data","location","navigate","_Object$fromEntries","Object","fromEntries","URLSearchParams","search","stock_id","filter","_objectWithoutProperties","_excluded","_useStockCard","data","isLoading","handleSubmitFilter","period_month","splittedMonth","split","queryObj","month","year","query","toString","concat","pathname","children","title","breadcrumbs","text","url","className","onSubmit","stock_card","loading"],"sources":["/Users/risky.setiyawan/Documents/Proj/mitramedis-frontend/src/pages/StockCard/index.tsx"],"sourcesContent":["import PageHeading from \"components/PageHeading\";\nimport StockCardTable from \"./components/StockCardTable\";\nimport StockCardFilter from \"./components/StockCardFilter\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useStockCard } from \"api/stock\";\n\nconst StockCard = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { stock_id, ...filter } = Object.fromEntries(\n    new URLSearchParams(location.search)\n  );\n  const { data, isLoading } = useStockCard({ stock_id, filter });\n\n  const handleSubmitFilter = (filter) => {\n    const { stock_id, period_month } = filter;\n    const splittedMonth = period_month.split(\"-\");\n\n    const queryObj = {\n      stock_id,\n      month: splittedMonth[1],\n      year: splittedMonth[0],\n    };\n\n    const query = new URLSearchParams(queryObj).toString();\n    navigate(`${location.pathname}?${query}`);\n  };\n\n  return (\n    <div>\n      <PageHeading\n        title=\"Kartu Stok\"\n        breadcrumbs={[{ text: \"Stok\", url: \"/stok\" }, { text: \"Kartu Stok\" }]}\n      />\n      <div className=\"space-y-4\">\n        <StockCardFilter onSubmit={handleSubmitFilter} />\n        <StockCardTable\n          data={data?.data?.data?.stock_card}\n          loading={isLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StockCard;\n"],"mappings":"8LAAA,MAAO,CAAAA,WAAW,KAAM,wBAAwB,CAChD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,YAAY,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzC,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,KAAAC,UAAA,CAAAC,eAAA,CACtB,GAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,IAAAW,mBAAA,CAAgCC,MAAM,CAACC,WAAW,CAChD,GAAI,CAAAC,eAAe,CAACL,QAAQ,CAACM,MAAM,CACrC,CAAC,CAFOC,QAAQ,CAAAL,mBAAA,CAARK,QAAQ,CAAKC,MAAM,CAAAC,wBAAA,CAAAP,mBAAA,CAAAQ,SAAA,EAG3B,IAAAC,aAAA,CAA4BnB,YAAY,CAAC,CAAEe,QAAQ,CAARA,QAAQ,CAAEC,MAAM,CAANA,MAAO,CAAC,CAAC,CAAtDI,IAAI,CAAAD,aAAA,CAAJC,IAAI,CAAEC,SAAS,CAAAF,aAAA,CAATE,SAAS,CAEvB,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIN,MAAM,CAAK,CACrC,GAAQ,CAAAD,QAAQ,CAAmBC,MAAM,CAAjCD,QAAQ,CAAEQ,YAAY,CAAKP,MAAM,CAAvBO,YAAY,CAC9B,GAAM,CAAAC,aAAa,CAAGD,YAAY,CAACE,KAAK,CAAC,GAAG,CAAC,CAE7C,GAAM,CAAAC,QAAQ,CAAG,CACfX,QAAQ,CAARA,QAAQ,CACRY,KAAK,CAAEH,aAAa,CAAC,CAAC,CAAC,CACvBI,IAAI,CAAEJ,aAAa,CAAC,CAAC,CACvB,CAAC,CAED,GAAM,CAAAK,KAAK,CAAG,GAAI,CAAAhB,eAAe,CAACa,QAAQ,CAAC,CAACI,QAAQ,CAAC,CAAC,CACtDrB,QAAQ,IAAAsB,MAAA,CAAIvB,QAAQ,CAACwB,QAAQ,MAAAD,MAAA,CAAIF,KAAK,CAAE,CAAC,CAC3C,CAAC,CAED,mBACEzB,KAAA,QAAA6B,QAAA,eACE/B,IAAA,CAACP,WAAW,EACVuC,KAAK,CAAC,YAAY,CAClBC,WAAW,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,OAAQ,CAAC,CAAE,CAAED,IAAI,CAAE,YAAa,CAAC,CAAE,CACvE,CAAC,cACFhC,KAAA,QAAKkC,SAAS,CAAC,WAAW,CAAAL,QAAA,eACxB/B,IAAA,CAACL,eAAe,EAAC0C,QAAQ,CAAEjB,kBAAmB,CAAE,CAAC,cACjDpB,IAAA,CAACN,cAAc,EACbwB,IAAI,CAAEA,IAAI,SAAJA,IAAI,kBAAAd,UAAA,CAAJc,IAAI,CAAEA,IAAI,UAAAd,UAAA,kBAAAC,eAAA,CAAVD,UAAA,CAAYc,IAAI,UAAAb,eAAA,iBAAhBA,eAAA,CAAkBiC,UAAW,CACnCC,OAAO,CAAEpB,SAAU,CACpB,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}